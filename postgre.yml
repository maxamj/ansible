---
- hosts: postgre

  tasks:
  
  # Импортируем константы
  - name: Import vars
    include_vars: vars/vaulted_vars.yml

  # Устанавливаем необходимый репозиторий для установки
  - name: Install PostgreSQL repo
    yum: name=https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm state=present 

  # Установка PostgreSQL и включение в автозагрузку  
  - name: Install PostgreSQL
    yum: name="{{ item }}" state=latest
    update_cache: yes
    enablerepo: "pgdg96"
    with_items:
      - "postgresql96"
      - "postgresql96-server"
      - "postgresql96-contrib"
      - "postgresql96-libs"
      - "postgresql96-devel"
      - python-psycopg2
      - cronie-anacron
      - cronie
      - crontabs   
    notify:
      - enable postgres
                                 
  # Остановка службы PostgreSQL								 
  - name: PostgreSQL service stop    
    service:
       name: 'postgresql-9.6'
       state: stopped
      
  # Инициализируем наш PostgreSQL	
  - name: Create data cluster
    command: /usr/pgsql-9.6/bin/postgresql96-setup initdb

  # Запускаем службы PostgreSQL	  
  - name: PostgreSQL service start    
    service:
       name: 'postgresql-9.6'
       state: started

  - name: Create the user1
    become: yes
    become_user: postgres
    postgresql_user:
       name: "{{db_user1}}"
       password: "{{db_pass_user1}}"
       encrypted: True

  - name: create the db1
    become: yes
    become_user: postgres
    postgresql_db:
       name: dbgr1
       owner: "{{db_user1}}"
       template: template0
       encoding: UTF8
       lc_collate: 'en_US.UTF-8'
       lc_ctype: 'en_US.UTF-8'

  - name: Create the user2
    become: yes
    become_user: postgres
    postgresql_user:
       name: "{{db_user2}}"
       password: "{{db_pass_user2}}"
       encrypted: True
       
  - name: create the db2
    become: yes
    become_user: postgres
    postgresql_db:
       name: dbgr2
       owner: "{{db_user2}}"
       template: template1
       encoding: UTF8
       lc_collate: 'en_US.UTF-8'
       lc_ctype: 'en_US.UTF-8'
   
#  - name: create the db2
#    become: yes
#    become_user: postgres
#    postgresql_privs:
#       db: dbgr2
#       grant_option: yes
#       roles: "{{db_user2}}"
#       objs: ALL_IN_SCHEMA
#       privs: ALL
#       type: table
#       state: present

  - name: Add entry pg_hba.conf user1
    lineinfile:
       dest=/usr/pgsql-9.6/share/pg_hba.conf
       regexp='local dbgr1 {{db_user1}} md5'
       line='local dbgr1 {{db_user1}} md5' state=present
   
  - name: Add entry pg_hba.conf user2
    lineinfile:
       dest=/usr/pgsql-9.6/share/pg_hba.conf
       regexp='local dbgr2 {{db_user2}} md5'
       line='local dbgr2 {{db_user2}} md5' state=present
    notify:
      - reload postgres
 
  - name: add entry ip for postgresql
    lineinfile:
#      dest=/usr/pgsql-9.6/share/postgresql.conf
       dest=/var/lib/pgsql/9.6/data/postgresql.conf
       regexp='^listen_addresses'
       line="listen_addresses = 51.75.30.78"
       state=present
   
  - name: add entry port for postgresql
    lineinfile:
#      dest=/usr/pgsql-9.6/share/postgresql.conf
       dest=/var/lib/pgsql/9.6/data/postgresql.conf
       regexp='^port'
       line="port = {{portdb1}}"
       state=present
    notify:
      - restart postgres
  
  - name: add iptables rule for connecting 
    command: "{{ item }}"
    with_items:
      - "iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 202.54.1.20 --dport 5432 -m state --state NEW,ESTABLISHED -j ACCEPT"
      - "service iptables save"
      - "systemctl restart iptables"

  handlers:
#    # перечитываем конфигурацию postgresql
  - name: reload postgres
    sudo: yes
    action: service name=postgresql-9.6 state=reloaded

    # перезагружаем postgresql
  - name: restart postgres
    sudo: yes
    action: service name=postgresql-9.6 state=restarted

    # enable postgresql
  - name: enable postgres
    sudo: yes
    action: service name=postgresql-9.6 state=enable