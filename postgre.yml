---
- hosts: postgre

  tasks:
  
  # Импортируем константы
  - name: Import vars
    include_vars: vars/vaulted_vars.yml

  # Устанавливаем необходимый репозиторий для установки
  - name: Install PostgreSQL repo
    yum: name=https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm state=present 

  # Установка PostgreSQL и включение в автозагрузку  
  - name: Install PostgreSQL
    yum: name="{{ item }}" state=latest update_cache=yes enablerepo=pgdg96
    with_items:
      - "postgresql96"
      - "postgresql96-server"
      - "postgresql96-contrib"
      - "postgresql96-libs"
      - "postgresql96-devel"
      - python-psycopg2
      - cronie-anacron
      - cronie
      - crontabs   
                                
  # Остановка службы PostgreSQL								 
  - name: PostgreSQL service stop    
    service:
       name: 'postgresql-9.6'
       state: stopped
      
  # Delete data PostgreSQL	
  - name: Delete data PostgreSQL
    file: path='/var/lib/pgsql/9.6/data' state=absent

  # Инициализируем наш PostgreSQL	
  - name: Create data cluster
    command: /usr/pgsql-9.6/bin/postgresql96-setup initdb

  # Enable PostgreSQL	
  - name: Enable cluster
    command: systemctl enable postgresql-9.6
  
  # Запускаем службы PostgreSQL	  
  - name: PostgreSQL service start    
    command: systemctl start postgresql-9.6

  # Создаем юзера 1 PostgreSQL	  
  - name: Create the user1
    become: yes
    become_user: postgres
    postgresql_user:
       name: "{{db_user1}}"
       password: "{{db_pass_user1}}"
       encrypted: True

  # Создаем БД 1 PostgreSQL	
  - name: Сreate the db1
    become: yes
    become_user: postgres
    postgresql_db:
       name: dbgr1
       owner: "{{db_user1}}"
       template: template0
       encoding: UTF8
       lc_collate: 'en_US.UTF-8'
       lc_ctype: 'en_US.UTF-8'

  # Создаем юзера 2 PostgreSQL	
  - name: Create the user2
    become: yes
    become_user: postgres
    postgresql_user:
       name: "{{db_user2}}"
       password: "{{db_pass_user2}}"
       encrypted: True

  # Создаем БД 2 PostgreSQL	       
  - name: Сreate the db2
    become: yes
    become_user: postgres
    postgresql_db:
       name: dbgr2
       owner: "{{db_user2}}"
       template: template1
       encoding: UTF8
       lc_collate: 'en_US.UTF-8'
       lc_ctype: 'en_US.UTF-8'
   
#  - name: create the db2
#    become: yes
#    become_user: postgres
#    postgresql_privs:
#       db: dbgr2
#       grant_option: yes
#       roles: "{{db_user2}}"
#       objs: ALL_IN_SCHEMA
#       privs: ALL
#       type: table
#       state: present

  # Добавляем тип авторизации юзера 1 PostgreSQL	
  - name: Add entry pg_hba.conf user1
    lineinfile:
       dest=/var/lib/pgsql/9.6/data/pg_hba.conf
       regexp='local dbgr1 {{db_user1}} md5'
       line='local dbgr1 {{db_user1}} md5' state=present

  # Добавляем тип авторизации юзера 2 PostgreSQL	   
  - name: Add entry pg_hba.conf user2
    lineinfile:
       dest=/var/lib/pgsql/9.6/data/pg_hba.conf
       regexp='local dbgr2 {{db_user2}} md5'
       line='local dbgr2 {{db_user2}} md5' state=present
#    notify:
#      - reload postgres

  # Меняем ИП адрес в конфиг
  - name: Add entry ip for postgresql
    lineinfile:
       dest=/var/lib/pgsql/9.6/data/postgresql.conf
       regexp='^listen_addresses'
       line="listen_addresses = {{ippostgres}}"
       state=present

  # Меняем порт БД 	   
  - name: Add entry port for postgresql
    lineinfile:
       dest=/var/lib/pgsql/9.6/data/postgresql.conf
       regexp='^port'
       line="port = {{portdb1}}"
       state=present

  # Добавляем записи в iptables для внешних подключений	   
  - name: Add iptables rule for connecting 
    command: "{{ item }}"
    with_items:
      - iptables -A INPUT -p tcp -s 0/0 --sport 1024:65535 -d 51.75.30.78 --dport 5432 -m state --state NEW,ESTABLISHED -j ACCEPT

  # Сохраняем iptables	  
  - name: Save iptables
    command: iptables-save
    become: true

  # Перезапускаем службу iptables
  - name: Restart service iptables 
    command: systemctl restart iptables

#  handlers:
#    # перечитываем конфигурацию postgresql
#  - name: reload postgres
#    sudo: yes
#    action: service name=postgresql-9.6 state=reloaded

    # перезагружаем postgresql
#  - name: restart postgres
#    command: systemctl restart postgresql-9.6
 
    # enable postgresql
#  - name: enable postgres
#    sudo: yes
#    action: service name=postgresql-9.6 state=enable